За еден природен број а велиме дека е порамнување на друг природен број b ако и само ако цифрите еднакви на 9 во бројот b се заменети со цифрата 7 во бројот а.

Пример. Бројот 734775 е порамнување на бројот 934795.

Од стандарден влез се внесуваат непознат број на цели броеви (не повеќе од 100), се додека не се внесе нешто што не може да се интерпретира како цел број.

Ваша задача е да ги отпечатите најмалите 5 од порамнувањата на сите внесени броеви, по редослед од најмалиот кон најголемиот.

Забелешка: Доколку се внесат помалку од 5 броеви, тогаш печатите толку броеви колку што се соодветно внесени.

Наоѓањето на порамнувањето на даден број треба да се реализира во посебна рекурзивна функција poramnet(int a).

Пример.

За броевите: 9592, 69403, 100007, 6, 987, 6977, 33439,

треба да се најдат нивните порамнувања ( тоа се: 7572, 67403, 100007, 6, 787, 6777 и 33437, соодветно),

и да се отпечатат најмалите 5 од нив по овој редослед: 6 787 6777 7572 33437.

ЗАБРАНЕТО е користење на глобални променливи.


  #include <iostream>
using namespace std;

// Функција за заменување на цифрата 9 со 7 во даден број.
int poramnet(int a) {
    int result = 0, factor = 1;

    while (a != 0) {
        int digit = a % 10;
        if (digit == 9) {
            digit = 7;
        }
        result += digit * factor;
        factor *= 10;
        a /= 10;
    }

    return result;
}

// Функција за сортирање на низата користејќи bubble sort.
void bubbleSort(int arr[], int n) {
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                // Размена на елементите
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}

int main() {
    const int MAX_SIZE = 100;  // Максимална големина на низите
    int numbers[MAX_SIZE];  // Низа за чување на влезните броеви
    int poramnetaNumbers[MAX_SIZE];  // Низа за чување на преобразените броеви
    int num;  // Променлива за привремено чување на влезен број
    int count = 0;  // Бројач за вкупниот број на прочитани броеви

    // Читање на броеви од влезот додека не се достигне MAX_SIZE
    while (cin >> num && count < MAX_SIZE) {
        numbers[count++] = num;
    }

    // Преобразување на секој број
    for (int i = 0; i < count; ++i) {
        poramnetaNumbers[i] = poramnet(numbers[i]);
    }

    // Сортирање на преобразените броеви
    bubbleSort(poramnetaNumbers, count);

    // Печатење на првите 5 броеви (или помалку ако има помалку од 5)
    for (int i = 0; i < min(5, count); ++i) {
        cout << poramnetaNumbers[i] << " ";
    }

    cout << endl;
    return 0;  // Успешно завршување на програмата
}
